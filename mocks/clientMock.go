// Automatically generated by MockGen. DO NOT EDIT!
// Source: client.go

package mock_xingapi

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *_MockClientRecorder
}

// Recorder for MockClient (not exported)
type _MockClientRecorder struct {
	mock *MockClient
}

func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &_MockClientRecorder{mock}
	return mock
}

func (_m *MockClient) EXPECT() *_MockClientRecorder {
	return _m.recorder
}

func (_m *MockClient) User(id string, handler UserHandler) {
	_m.ctrl.Call(_m, "User", id, handler)
}

func (_mr *_MockClientRecorder) User(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "User", arg0, arg1)
}

func (_m *MockClient) ContactsList(userID string, limit int, offset int, handler ContactsHandler) {
	_m.ctrl.Call(_m, "ContactsList", userID, limit, offset, handler)
}

func (_mr *_MockClientRecorder) ContactsList(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ContactsList", arg0, arg1, arg2, arg3)
}

func (_m *MockClient) Me(handler UserHandler) {
	_m.ctrl.Call(_m, "Me", handler)
}

func (_mr *_MockClientRecorder) Me(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Me", arg0)
}

func (_m *MockClient) Messages(userID string, handler func(error)) {
	_m.ctrl.Call(_m, "Messages", userID, handler)
}

func (_mr *_MockClientRecorder) Messages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Messages", arg0, arg1)
}
